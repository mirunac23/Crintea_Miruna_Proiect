// <auto-generated />
using System;
using Crintea_Miruna_Proiect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Crintea_Miruna_Proiect.Migrations
{
    [DbContext(typeof(Crintea_Miruna_ProiectContext))]
    [Migration("20240118114313_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Crintea_Miruna_Proiect.Models.Coach", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Coach");
                });

            modelBuilder.Entity("Crintea_Miruna_Proiect.Models.Element", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BaseValue")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Element");
                });

            modelBuilder.Entity("Crintea_Miruna_Proiect.Models.ProgramElement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("ElementID")
                        .HasColumnType("int");

                    b.Property<int>("SkaterID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ElementID");

                    b.HasIndex("SkaterID");

                    b.ToTable("ProgramElement");
                });

            modelBuilder.Entity("Crintea_Miruna_Proiect.Models.Skater", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SkatingClubID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SkatingClubID");

                    b.ToTable("Skater");
                });

            modelBuilder.Entity("Crintea_Miruna_Proiect.Models.SkaterCoach", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("CoachID")
                        .HasColumnType("int");

                    b.Property<int?>("SkaterID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CoachID");

                    b.HasIndex("SkaterID");

                    b.ToTable("SkaterCoach");
                });

            modelBuilder.Entity("Crintea_Miruna_Proiect.Models.SkatingClub", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpeningYear")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("SkatingClub");
                });

            modelBuilder.Entity("Crintea_Miruna_Proiect.Models.ProgramElement", b =>
                {
                    b.HasOne("Crintea_Miruna_Proiect.Models.Element", "Element")
                        .WithMany()
                        .HasForeignKey("ElementID");

                    b.HasOne("Crintea_Miruna_Proiect.Models.Skater", "Skater")
                        .WithMany()
                        .HasForeignKey("SkaterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");

                    b.Navigation("Skater");
                });

            modelBuilder.Entity("Crintea_Miruna_Proiect.Models.Skater", b =>
                {
                    b.HasOne("Crintea_Miruna_Proiect.Models.SkatingClub", "SkatingClub")
                        .WithMany("Skaters")
                        .HasForeignKey("SkatingClubID");

                    b.Navigation("SkatingClub");
                });

            modelBuilder.Entity("Crintea_Miruna_Proiect.Models.SkaterCoach", b =>
                {
                    b.HasOne("Crintea_Miruna_Proiect.Models.Coach", "Coach")
                        .WithMany("SkaterCoaches")
                        .HasForeignKey("CoachID");

                    b.HasOne("Crintea_Miruna_Proiect.Models.Skater", "Skater")
                        .WithMany("SkaterCoaches")
                        .HasForeignKey("SkaterID");

                    b.Navigation("Coach");

                    b.Navigation("Skater");
                });

            modelBuilder.Entity("Crintea_Miruna_Proiect.Models.Coach", b =>
                {
                    b.Navigation("SkaterCoaches");
                });

            modelBuilder.Entity("Crintea_Miruna_Proiect.Models.Skater", b =>
                {
                    b.Navigation("SkaterCoaches");
                });

            modelBuilder.Entity("Crintea_Miruna_Proiect.Models.SkatingClub", b =>
                {
                    b.Navigation("Skaters");
                });
#pragma warning restore 612, 618
        }
    }
}
